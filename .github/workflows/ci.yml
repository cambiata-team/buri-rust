name: CI

on: push

jobs:
  tests:
    name: ${{ matrix.task.name }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        rust: [1.66.0]
        task:
          - name: Clippy
            components: clippy
            run: cargo install cargo-cranky && cargo cranky
          - name: Unit tests
            components: ""
            run: cargo test
          - name: Formatting
            components: rustfmt
            run: cargo fmt -- --check
    steps:
      - uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-dependencies
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git
            ./target
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.task.name }}-${{ hashFiles('Cargo.lock') }}
      - name: Install Rust ${{ matrix.rust }}
        uses: ructions/toolchain@v2
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          components: ${{ matrix.task.components }}
      - name: Run ${{ matrix.task.name }}
        run: ${{ matrix.task.run }}
  js-tests:
    name: JS tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-dependencies
        with:
          path: |
            node_modules
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git
            ./target
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('bun.lockb') }}-${{ hashFiles('Cargo.lock') }}
      - name: Install Rust ${{ matrix.rust }}
        uses: ructions/toolchain@v2
        with:
          toolchain: 1.66.0
          profile: minimal
          override: true
      - name: Test JS compilation
        run: cargo run --bin e2e
      - name: Install bun
        run: curl -fsSL https://bun.sh/install | bash
      - name: Install bun dependencies
        run: ~/.bun/bin/bun install
      - name: Run JS tests
        run: ~/.bun/bin/bun wiptest
      - name: Check Filename Delimiters
        run: ~/.bun/bin/bun run ${{github.workspace}}/.github/workflows/check-filename-delimiter.js ${{github.workspace}}
